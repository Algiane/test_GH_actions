on:
  workflow_call:
    inputs:
      buildtype:
        description: 'CMAKE build type'
        type: string
        default: Release
        required: true

      testargs:
        description: additionals ctest arguments
        required: false
        type: string

      branch_name:
        description: branch to checkout for manual triggering
        required: false
        type: string

      event_name:
        description: github event name
        required: true
        type: string

# job
jobs:
  # PR must be labeled "ready to be merged" to run.
  # This job will fail if this is not the case.
  check_ready_to_be_merged:
    runs-on: ubuntu-20.04
    steps:
    - name: Check that the PR is ready to be merged
      run: |
        echo "event name ${{ github.event.inputs.name }}"
        echo "plop ${{ github.event.pull_request.number  }} ${{ github.event.number }}"
        labels=$(curl -H "Accept: application/vnd.github+json" \
           https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }} \
           | jq '.labels')
        ready_label="ready to be merged"
        echo "Is PR Ready to be Merged? (Check for $ready_label label)"
        echo "Labels found are: $labels"
        if [[ $labels == *"$ready_label"* ]]; then "true" ; else "false"; fi

  # Matrix jobs will be cancelled if PR is a draft.
  check_is_draft:
    runs-on: ubuntu-20.04
    steps:
    - name: Check wether the PR is a draft
      run: |
        draft_status=$(curl -H "Accept: application/vnd.github+json" \
           https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }} \
           | jq '.draft')
        echo "Is PR a draft? (Check PR's draft status )"
        echo $draft_status
        if [[ $draft_status == true ]]; then "true" ; else "false"; fi


  ci:
    runs-on: ${{ matrix.os }}

    needs:
    - check_is_draft
    - check_ready_to_be_merged

    # Launch a matrix of jobs
    strategy:
        matrix:
            os: [ubuntu-20.04]
            pattern: [on,off]
            scotch: [on,off]

    steps:
      - name: Print options and set environment variables
        run: |
          echo "${{ github.event.inputs.name }}:
            Os:      ${{ matrix.os }},
            Pattern: ${{ matrix.pattern }},
            Scotch:  ${{ matrix.scotch }}"

      - name: Print param values
        run: |
          echo  ${{ inputs.testargs }}  ${{ inputs.buildtype }} ${{ inputs.event_name }} ${{ inputs.branch_name }}
          echo " PARAMNAME: $INPUT_PARAMNAME"

      - uses: actions/checkout@v2
        if: inputs.event_name != 'workflow_dispatch'

      - uses: actions/checkout@v2
        if: inputs.event_name == 'workflow_dispatch'
        with:
          ref: ${{ inputs.branch_name }}

      - name: is branch name filled
        if: inputs.branch_name != ''
        run: echo "ok"

      - name: is branch name filled
        if: inputs.branch_name
        run: echo "ok2"

      - name: is branch name empty
        if: inputs.branch_name == ''
        run: echo "ok3"