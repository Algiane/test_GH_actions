name: GitHub ubuntu CI

on:
  pull_request:

  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Branch to test'
        # Default value if no value is explicitly provided
        default: 'main'
        # Input has to be provided for the workflow to run
        required: false

jobs:

  # PR must be labeled "ready to be merged" to run.
  # This job will fail if this is not the case.
  check_ready_to_be_merged:
    runs-on: ubuntu-20.04
    steps:
    - name: Check that the PR is ready to be merged
      run: |
        echo "event name ${{ github.event.inputs.name }}"
        echo "plop ${{ github.event.pull_request.number  }} ${{ github.event.number }}"
        labels=$(curl -H "Accept: application/vnd.github+json" \
           https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }} \
           | jq '.labels')
        ready_label="ready to be merged"
        echo "Is PR Ready to be Merged? (Check for $ready_label label)"
        echo "Labels found are: $labels"
        if [[ $labels == *"$ready_label"* ]]; then "true" ; else "false"; fi

  check_not_ready:
    if: ${{ always() }}
    needs: check_ready_to_be_merged
    runs-on: ubuntu-20.04
    steps:
    - name: Check if the PR is not ready to be merged
      if: ${{ contains(needs.check_ready_to_be_merged.result, 'failure') }}
      run: |
        echo " plop ${{ needs.check_ready_to_be_merged.result }}"
        if ${{ contains(needs.check_ready_to_be_merged.result, 'failure') }}; then "false"; else "true"; fi
        false;

  check_not_ready2:
    if: ${{ always() }}
    needs: check_ready_to_be_merged
    runs-on: ubuntu-20.04
    steps:
    - name: Check 2 if the PR is not ready to be merged
      if: ${{ contains(needs.check_ready_to_be_merged.result, 'false') }}
      run: |
        echo " plop2 ${{ needs.check_ready_to_be_merged.result }}"
        false;

    
  # Matrix jobs will be cancelled if PR is a draft.
  check_is_draft:
    runs-on: ubuntu-20.04
    steps:
    - name: Check wether the PR is a draft
      run: |
        draft_status=$(curl -H "Accept: application/vnd.github+json" \
           https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }} \
           | jq '.draft')
        echo "Is PR a draft? (Check PR's draft status )"
        echo $draft_status
        if [[ $draft_status == true ]]; then "true" ; else "false"; fi

  draft_and_ready:
    runs-on: ubuntu-20.04

    needs:
    - check_is_draft
    - check_ready_to_be_merged

    steps:
      - name: draft and ready
        run: |
          echo "draft and ready"

  draft_and_not_ready:
    runs-on: ubuntu-20.04

    needs:
    - check_is_draft
    - check_not_ready

    steps:
      - name: draft and not ready
        run: |
          echo "draft and not ready"          
          
  draft_and_not_ready2:
    runs-on: ubuntu-20.04

    needs:
    - check_is_draft
    - check_not_ready2

    steps:
      - name: draft and not ready2
        run: |
          echo "draft and not ready2"      
