name: GitHub ubuntu CI

# on: [push, pull_request]
on:
  push:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Branch to test'
        # Default value if no value is explicitly provided
        default: 'main'
        # Input has to be provided for the workflow to run
        required: false

      code_coverage:
        required: false
        type: boolean

jobs:
  ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-20.04,macos-12]
            build: [Release,Debug]
            pattern: [on,off]
            scotch: [on,off]
            vtk: [off]
            include:
              # run vtk only without scotch and with delaunay insertion
              - build: Release
                pattern: off
                scotch: off
                vtk: on
                os: ubuntu-20.04
                
              - build: Debug
                pattern: off
                scotch: off
                vtk: on
                os: ubuntu-20.04

    steps:
      - name: test if
        if: (matrix.os == 'ubuntu-20.04' && inputs.code_coverage =='true' )
        run: |
          echo  "Code cov ? ${{ inputs.code_coverage }}"

      - uses: actions/checkout@v2

      - name: Install VTK
        if: matrix.vtk == 'on'
        run: |
          sudo apt-get update
          sudo apt-get install -y libvtk7-dev
          
      - name: Install Sctoch
        if: matrix.scotch == 'on'
        run: |
          git clone https://gitlab.inria.fr/scotch/scotch.git && cd scotch
          git checkout v6.1.3
          cd src && cp Make.inc/Makefile.inc.x86-64_pc_linux2 Makefile.inc
          make scotch -j "$NJOBS"
          make install scotch -j "$NJOBS"
        env:
          NJOBS: "2"

      - name: Install LibCommons
        if: matrix.elas == 'on'
        run: |
          git clone https://github.com/ISCDtoolbox/Commons.git && cd Commons
          mkdir build
          cd build && cmake ..
          make install
          
      - name: Install LinearElasticity
        if: matrix.elas == 'on'
        run: |
          git clone https://github.com/ISCDtoolbox/LinearElasticity.git && cd LinearElasticity
          mkdir build
          cd build && cmake ..
          make install
      - name: Configure Mmg      
        run: |
          echo "${{ github.event.inputs.name }}: Build ${{ matrix.build }}, Pattern ${{ matrix.pattern }}, Scotch  ${{ matrix.scotch }}, VTK  ${{ matrix.vtk }}"
          git clone https://github.com/MmgTools/mmg.git && cd mmg
          mkdir build && cd build
          cmake -DCI_CONTEXT=ON -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=${{matrix.build}} -DPATTERN=${{matrix.pattern}} -DUSE_SCOTCH=${{matrix.scotch}} -DUSE_VTK={{matrix.vtk}} -DCMAKE_Fortran_COMPILER=gfortran-9 -DTEST_LIBMMG=ON -DTEST_LIBMMGS=ON -DTEST_LIBMMG2D=ON -DTEST_LIBMMG3D=ON ..
      - name: Build Mmg      
        run: |
          cd mmg/build
          make -j "$NJOBS"
        env:
          NJOBS: "2"
          
      - name: Test Mmg      
        run: |
          cd mmg/build
          ctest -VV


