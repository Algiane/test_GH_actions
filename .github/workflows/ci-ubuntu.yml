name: GitHub ubuntu CI

on:
  pull_request:

  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Branch to test'
        # Default value if no value is explicitly provided
        default: 'main'
        # Input has to be provided for the workflow to run
        required: false

jobs:

  # PR must be labeled "ready to be merged" to run.
  # This job will fail if this is not the case.
  check_ready_to_be_merged:
    runs-on: ubuntu-20.04
    steps:
    - name: Check that the PR is ready to be merged
      run: |
        echo "event name ${{ github.event.inputs.name }}"
        echo "plop ${{ github.event.pull_request.number  }} ${{ github.event.number }}"
        labels=$(curl -H "Accept: application/vnd.github+json" \
           https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }} \
           | jq '.labels')
        ready_label="ready to be merged"
        echo "Is PR Ready to be Merged? (Check for $ready_label label)"
        echo "Labels found are: $labels"
        if [[ $labels == *"$ready_label"* ]]; then "true" ; else "false"; fi

  # Matrix jobs will be cancelled if PR is a draft.
  check_is_draft:
    runs-on: ubuntu-20.04
    steps:
    - name: Check wether the PR is a draft
      run: |
        draft_status=$(curl -H "Accept: application/vnd.github+json" \
           https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }} \
           | jq '.draft')
        echo "Is PR a draft? (Check PR's draft status )"
        echo $draft_status
        if [[ $draft_status == true ]]; then "true" ; else "false"; fi

  ubuntu:
    runs-on: ubuntu-20.04

    needs:
    - check_is_draft
    - check_ready_to_be_merged

    strategy:
        matrix:
            build: [Release]
            pattern: [on,off]

    steps:
      - uses: actions/checkout@v2

      - name: Configure Mmg
        run: |
          echo "${{ github.event.inputs.name }}: Build ${{ matrix.build }}, Pattern ${{ matrix.pattern }}, Scotch  ${{ matrix.scotch }}, VTK  ${{ matrix.vtk }}"
          git clone https://github.com/MmgTools/mmg.git && cd mmg
          mkdir build && cd build
          cmake -DCI_CONTEXT=ON -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=${{matrix.build}} -DPATTERN=${{matrix.pattern}} -DUSE_SCOTCH=${{matrix.scotch}} -DUSE_VTK={{matrix.vtk}} -DCMAKE_Fortran_COMPILER=gfortran-9 -DTEST_LIBMMG=ON -DTEST_LIBMMGS=ON -DTEST_LIBMMG2D=ON -DTEST_LIBMMG3D=ON ..
      - name: Build Mmg
        run: |
          cd mmg/build
          make -j "$NJOBS"
        env:
          NJOBS: "2"
